{"version":3,"sources":["components/theme.js","utils/hooks/useKeyPress.js","config/firebase.js","components/FirebaseData.js","components/RandomGradient.js","components/BrowseGradient.js","page/Home.js","components/Input.js","page/Login.js","components/GradientBlock.js","components/Loader.js","components/SavedGradients.js","store/AppContext.js","page/Gallery.js","utils/routes.js","utils/routes/AuthRoute.js","utils/routes/GuestRoute.js","components/Navbar.js","App.js","serviceWorker.js","index.js","assets/images/head-img.svg"],"names":["ButtonPrimary","styled","button","attrs","className","props","primary","secondary","List","ul","H1","h1","StyledLink","a","require","useState","useEffect","useKeyPress","keycode","keyPressed","setKeyPressed","downHandler","e","preventDefault","keyCode","window","addEventListener","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","storage","projectFireStore","firestore","FirebaseData","colors","weights","RandomGradient","randomTo","setRandomTo","switched","spaceBar","setSpaceBar","handleClick","randomNumber","Math","ceil","random","length","div","initial","x","animate","onClick","BrowseGradient","Home","toggle","setToggle","console","log","StyledErrorMessage","ErrorMessage","Input","setIsLoggedIn","initialValues","email","password","onSubmit","value","auth","signInWithEmailAndPassword","then","validationSchema","Yup","required","min","formik","class","src","alt","type","name","placeholder","component","id","for","href","fill","viewBox","fill-rule","d","clip-rule","Button","motion","Login","isLoggedIn","history","useHistory","provider","GoogleAuthProvider","replace","whileHover","scale","whileTap","signInWithRedirect","result","credential","accessToken","user","catch","error","code","message","GradientBlock","color","StyledSpinner","FaSpinner","size","Loader","center","opacity","exit","backgroundColor","SavedGradients","data","setData","onAuthStateChanged","collection","doc","uid","get","count","map","dat","AppContext","React","createContext","StyledDiv","Gallery","useContext","path","exact","AuthRoute","to","GuestRoute","Header","head","signOut","res","response","App","setUser","isLoading","setIsLoading","displayName","Provider","routes","route","index","key","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","module","exports"],"mappings":"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","file":"static/js/main.53edb825.chunk.js","sourcesContent":["import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport tw from \"twin.macro\";\r\nimport { Link, NavLink } from \"react-router-dom\";\r\n\r\nexport const ButtonPrimary = styled.button.attrs({\r\n  className: \"px-4 py-2 rounded\",\r\n})`\r\n  ${(props) => {\r\n    if (props.primary) return tw`bg-red-200`;\r\n    else if (props.secondary) return tw`border border-blue-200`;\r\n    else return tw`border border-blue-200`;\r\n  }}\r\n`;\r\nexport const List = styled.ul`\r\n  ${tw`flex m-2 justify-between items-center`}\r\n\r\n  ul {\r\n    ${tw`flex`}\r\n  }\r\n\r\n  li {\r\n    ${tw`p-2 hover:opacity-75`}\r\n\r\n    &:active {\r\n      ${tw`underline`}\r\n    }\r\n  }\r\n`;\r\n\r\nexport const H1 = styled.h1`\r\n  ${tw`text-5xl text-gray-700 text-center`}\r\n`;\r\n\r\nexport const StyledLink = styled.a`\r\n  ${tw`text-sm text-gray-500 cursor-pointer my-6 p-2`}\r\n`;\r\n","const { useState, useEffect } = require(\"react\");\r\n\r\nfunction useKeyPress(keycode) {\r\n  const [keyPressed, setKeyPressed] = useState(false);\r\n\r\n  function downHandler(e) {\r\n    e.preventDefault();\r\n    if (e.keyCode == keycode) {\r\n      setKeyPressed(true);\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    window.addEventListener(\"keydown\", downHandler);\r\n    // window.addEventListener(\"keyup\", upHandler);\r\n  }, []);\r\n\r\n  return [keyPressed, setKeyPressed];\r\n}\r\n\r\nexport default useKeyPress;\r\n","import firebase from 'firebase'\r\nimport 'firebase/firestore'\r\n\r\nvar firebaseConfig = {\r\n  apiKey: \"AIzaSyDAiHVo0r2yn_OMSWxHm8DxwhWcb2_c-BI\",\r\n  authDomain: \"react-auth-88b56.firebaseapp.com\",\r\n  databaseURL: \"https://react-auth-88b56.firebaseio.com\",\r\n  projectId: \"react-auth-88b56\",\r\n  storageBucket: \"react-auth-88b56.appspot.com\",\r\n  messagingSenderId: \"491935843921 \",\r\n  appId: \"1:491935843921:web:596835e765857e28f89a70\"\r\n};\r\n// Initialize Firebase\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nconst projectStorage = firebase.storage();\r\nconst projectFireStore = firebase.firestore();\r\n\r\nexport {firebase, projectFireStore, projectStorage}","import React, { useEffect, useState } from \"react\";\r\nimport { projectFireStore } from \"../config/firebase\";\r\n\r\nconst FirebaseData = () => {\r\n  const [gradients, setGradients] = useState([]);\r\n\r\n  useEffect(() => {\r\n    // const data = projectFireStore.collection(\"gradients\");\r\n    // data.doc(\"blue\").set({\r\n    //   name: \"San Francisco\",\r\n    //   state: \"CA\",\r\n    //   country: \"USA\",\r\n    //   capital: false,\r\n    //   population: 860000,\r\n    //   regions: [\"west_coast\", \"norcal\"],\r\n    // });\r\n    // data.doc(\"LA\").set({\r\n    //   name: \"Los Angeles\", state: \"CA\", country: \"USA\",\r\n    //   capital: false, population: 3900000,\r\n    //   regions: [\"west_coast\", \"socal\"] });\r\n    // data.doc(\"red\").set({\r\n    //   name: \"Los Angeles\", state: \"CA\", country: \"USA\",\r\n    //   capital: false, population: 3900000,\r\n    //   regions: [\"west_coast\", \"socal\"] });\r\n  }, []);\r\n\r\n  return (\r\n    <ul>\r\n      {/* {gradients.map((gradient) => (\r\n        <li>{gradient.name}</li>\r\n      ))} */}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default FirebaseData;\r\n","import React, { useEffect, useState, useRef } from \"react\";\r\nimport GradientBar from \"./GradientBar\";\r\nimport { ButtonPrimary, StyledLink } from \"./theme\";\r\nimport useKeyPress from \"../utils/hooks/useKeyPress\";\r\nimport FirebaseData from \"./FirebaseData\";\r\nimport useGetDocument from \"../utils/hooks/useGetDocument\";\r\nimport { motion } from \"framer\";\r\nimport { FaExclamationCircle } from \"react-icons/fa\";\r\n\r\nconst colors = [\"blue\", \"yellow\", \"green\", \"gray\", \"red\", \"orange\"];\r\nconst weights = [100, 200, 300, 400, 500, 600, 700, 800, 900];\r\n\r\nconst RandomGradient = () => {\r\n  const [randomTo, setRandomTo] = useState(\"from-red-400 to-red-500\");\r\n  const [switched, setSwitched] = useState(true);\r\n  let [spaceBar, setSpaceBar] = useKeyPress(32);\r\n\r\n  // const data = useGetDocument(\"green\");\r\n\r\n  useEffect(() => {\r\n    handleClick();\r\n    setSpaceBar(false);\r\n    // console.log(spaceBar);\r\n  }, [spaceBar]);\r\n\r\n  const randomNumber = () => {\r\n    const random = Math.ceil(Math.random() * colors.length - 1);\r\n    return random;\r\n  };\r\n\r\n  const handleClick = () => {\r\n    setRandomTo(\r\n      `from-${colors[randomNumber()]}-${weights[randomNumber()]} to-${\r\n        colors[randomNumber()]\r\n      }-${weights[randomNumber()]}`\r\n    );\r\n  };\r\n\r\n  return (\r\n    <motion.div initial={{ x: -100 }} animate={{ x: 0 }}>\r\n      {switched && (\r\n        <motion.div className={`h-64 bg-gradient-to-r ${randomTo}`}>\r\n          <FirebaseData />\r\n        </motion.div>\r\n      )}\r\n\r\n      <div className=\"flex mx-auto justify-around max-w-xs items-center rounded p-2 bg-gray-200 my-4\">\r\n        <FaExclamationCircle />\r\n        <p className=\"text-xs\">Press Spacebar to Generate a random Gradient</p>\r\n      </div>\r\n      <ButtonPrimary\r\n        className=\"sm:hidden flex mx-auto justify-around max-w-xs items-center my-2\"\r\n        primary\r\n        onClick={handleClick}\r\n      >\r\n        Generate\r\n      </ButtonPrimary>\r\n    </motion.div>\r\n  );\r\n};\r\n\r\nexport default RandomGradient;\r\n","import { motion } from \"framer\";\r\nimport React from \"react\";\r\nimport { H1 } from \"./theme\";\r\n\r\nconst BrowseGradient = () => {\r\n  return (\r\n    <motion.div initial={{ x: 100 }} animate={{ x: 0 }}>\r\n      <H1>Explore Beautiful Gradients</H1>\r\n    </motion.div>\r\n  );\r\n};\r\n\r\nexport default BrowseGradient;\r\n","import React, { useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport tw from \"twin.macro\";\r\nimport RandomGradient from \"../components/RandomGradient\";\r\nimport BrowseGradient from \"../components/BrowseGradient\";\r\nimport { StyledLink } from \"../components/theme\";\r\n\r\nconst Home = () => {\r\n  const [toggle, setToggle] = useState(\"random\");\r\n\r\n  const handleRandom = () => setToggle(\"random\");\r\n  const handleBrowse = () => setToggle(\"browse\");\r\n\r\n  console.log(toggle);\r\n  return (\r\n    <div>\r\n      <div className=\"flex justify-around max-w-6xl\">\r\n        <StyledLink\r\n          onClick={handleRandom}\r\n          className={toggle === \"random\" && \"underline\"}\r\n        >\r\n          Generate Random Gradient\r\n        </StyledLink>\r\n        <StyledLink\r\n          onClick={handleBrowse}\r\n          className={toggle !== \"random\" && \"underline\"}\r\n        >\r\n          Browse Gradients\r\n        </StyledLink>\r\n      </div>\r\n      {toggle === \"random\" ? <RandomGradient /> : <BrowseGradient />}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import {\r\n  ErrorMessage,\r\n  Field,\r\n  Form,\r\n  Formik,\r\n  useFormik,\r\n  yupToFormErrors,\r\n} from \"formik\";\r\nimport React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport tw from \"twin.macro\";\r\nimport * as Yup from \"yup\";\r\nimport { firebase } from \"../config/firebase\";\r\n\r\nconst StyledErrorMessage = styled(ErrorMessage)`\r\n  color: red;\r\n  font-size: 12px;\r\n  margin-top: 2px;\r\n`;\r\n\r\nconst Input = ({ setIsLoggedIn }) => {\r\n  return (\r\n    <Formik\r\n      initialValues={{ email: \"\", password: \"\" }}\r\n      onSubmit={(value) => {\r\n        firebase\r\n          .auth()\r\n          .signInWithEmailAndPassword(value.email, value.password)\r\n          .then(setIsLoggedIn(true));\r\n      }}\r\n      validationSchema={Yup.object({\r\n        email: Yup.string()\r\n          .required(\"Email is Required\")\r\n          .email(\"Email is invalid\"),\r\n        password: Yup.string()\r\n          .required(\"Password is required\")\r\n          .min(6, \"Password is min 6 characters\"),\r\n      })}\r\n    >\r\n      {(formik) => (\r\n        <div class=\"min-h-screen flex items-center justify-center bg-gray-50 py-12 px-4 sm:px-6 lg:px-8\">\r\n          <div class=\"max-w-md w-full\">\r\n            <div>\r\n              <img\r\n                class=\"mx-auto h-12 w-auto\"\r\n                src=\"https://tailwindui.com/img/logos/workflow-mark-on-white.svg\"\r\n                alt=\"Workflow\"\r\n              />\r\n              <h2 class=\"mt-6 text-center text-3xl leading-9 font-extrabold text-gray-900\">\r\n                Sign in to your account\r\n              </h2>\r\n            </div>\r\n            <Form class=\"mt-8\">\r\n              <input type=\"hidden\" name=\"remember\" value=\"true\" />\r\n              <div class=\"rounded-md shadow-sm\">\r\n                <div>\r\n                  <Field\r\n                    name=\"email\"\r\n                    type=\"email\"\r\n                    required\r\n                    className=\"appearance-none rounded-none relative block w-full px-3 py-2 border border-gray-300 placeholder-gray-500 text-gray-900 rounded-t-md focus:outline-none focus:shadow-outline-blue focus:border-blue-300 focus:z-10 sm:text-sm sm:leading-5\"\r\n                    placeholder=\"Email address\"\r\n                  />\r\n                  <StyledErrorMessage name=\"email\" component=\"p\" />\r\n                </div>\r\n                <div class=\"-mt-px\">\r\n                  <Field\r\n                    name=\"password\"\r\n                    type=\"password\"\r\n                    required\r\n                    className=\"appearance-none rounded-none relative block w-full px-3 py-2 border border-gray-300 placeholder-gray-500 text-gray-900 rounded-t-md focus:outline-none focus:shadow-outline-blue focus:border-blue-300 focus:z-10 sm:text-sm sm:leading-5\"\r\n                    placeholder=\"Password\"\r\n                  />\r\n                  <StyledErrorMessage name=\"password\" component=\"p\" />\r\n                </div>\r\n              </div>\r\n\r\n              <div class=\"mt-6 flex items-center justify-between\">\r\n                <div class=\"flex items-center\">\r\n                  <input\r\n                    id=\"remember_me\"\r\n                    type=\"checkbox\"\r\n                    class=\"form-checkbox h-4 w-4 text-indigo-600 transition duration-150 ease-in-out\"\r\n                  />\r\n                  <label\r\n                    for=\"remember_me\"\r\n                    class=\"ml-2 block text-sm leading-5 text-gray-900\"\r\n                  >\r\n                    Remember me\r\n                  </label>\r\n                </div>\r\n\r\n                <div class=\"text-sm leading-5\">\r\n                  <a\r\n                    href=\"#\"\r\n                    class=\"font-medium text-indigo-600 hover:text-indigo-500 focus:outline-none focus:underline transition ease-in-out duration-150\"\r\n                  >\r\n                    Forgot your password?\r\n                  </a>\r\n                </div>\r\n              </div>\r\n\r\n              <div class=\"mt-6\">\r\n                <button\r\n                  type=\"submit\"\r\n                  class=\"group relative w-full flex justify-center py-2 px-4 border border-transparent text-sm leading-5 font-medium rounded-md text-white bg-indigo-600 hover:bg-indigo-500 focus:outline-none focus:border-indigo-700 focus:shadow-outline-indigo active:bg-indigo-700 transition duration-150 ease-in-out\"\r\n                >\r\n                  <span class=\"absolute left-0 inset-y-0 flex items-center pl-3\">\r\n                    <svg\r\n                      class=\"h-5 w-5 text-indigo-500 group-hover:text-indigo-400 transition ease-in-out duration-150\"\r\n                      fill=\"currentColor\"\r\n                      viewBox=\"0 0 20 20\"\r\n                    >\r\n                      <path\r\n                        fill-rule=\"evenodd\"\r\n                        d=\"M5 9V7a5 5 0 0110 0v2a2 2 0 012 2v5a2 2 0 01-2 2H5a2 2 0 01-2-2v-5a2 2 0 012-2zm8-2v2H7V7a3 3 0 016 0z\"\r\n                        clip-rule=\"evenodd\"\r\n                      />\r\n                    </svg>\r\n                  </span>\r\n                  Sign in\r\n                </button>\r\n              </div>\r\n            </Form>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </Formik>\r\n  );\r\n};\r\n\r\nexport default Input;\r\n","import React, { useState } from \"react\";\r\nimport { Redirect, useHistory } from \"react-router-dom\";\r\nimport { firebase } from \"../config/firebase\";\r\nimport Input from \"../components/Input\";\r\nimport { Frame, motion } from \"framer\";\r\nimport styled from \"styled-components\";\r\nimport { FaGoogle } from \"react-icons/fa\";\r\n\r\nconst Button = styled(motion.button)`\r\n  width: 250px;\r\n  height: 50px;\r\n  padding: 1rem;\r\n  background: lightblue;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-around;\r\n`;\r\n\r\nconst Login = () => {\r\n  const [form, setForm] = useState({ email: \"\", password: \"\" });\r\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\r\n  const history = useHistory();\r\n\r\n  const handleGoogle = () => {\r\n    firebase\r\n      .auth()\r\n      .signInWithRedirect(provider)\r\n      .then(function (result) {\r\n        var token = result.credential.accessToken;\r\n        setIsLoggedIn(true);\r\n        var user = result.user;\r\n      })\r\n      .catch(function (error) {\r\n        var errorCode = error.code;\r\n        var errorMessage = error.message;\r\n\r\n        var email = error.email;\r\n\r\n        var credential = error.credential;\r\n        // ...\r\n      });\r\n  };\r\n\r\n  const provider = new firebase.auth.GoogleAuthProvider();\r\n\r\n  if (isLoggedIn) {\r\n    history.replace(\"/\");\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Button\r\n        whileHover={{ scale: 1.1 }}\r\n        whileTap={{ scale: 0.9 }}\r\n        onClick={handleGoogle}\r\n        className=\"\"\r\n      >\r\n        <FaGoogle />\r\n        Continue with Google\r\n      </Button>\r\n      <motion.div initial={{ x: -100 }} animate={{ x: 0 }}>\r\n        <Input setIsLoggedIn={setIsLoggedIn} />\r\n      </motion.div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","import React from \"react\";\r\n\r\nconst GradientBlock = ({ color }) => {\r\n  return <div className={`h-40 shadow-md bg-gradient-to-r ${color} m-2`} />;\r\n};\r\n\r\nexport default GradientBlock;\r\n","import { Frame } from \"framer\";\r\nimport React from \"react\";\r\nimport { FaSpinner } from \"react-icons/fa\";\r\nimport styled from \"styled-components\";\r\nimport tw from \"twin.macro\";\r\n\r\nconst StyledSpinner = styled(FaSpinner).attrs({\r\n  size: 60,\r\n})`\r\n  animation: spin 2s ease-in infinite;\r\n  @keyframes spin {\r\n    0% {\r\n      transform: rotate(0);\r\n    }\r\n    100% {\r\n      transform: rotate(360deg);\r\n    }\r\n  }\r\n`;\r\n\r\nconst Loader = () => {\r\n  return (\r\n    <div className=\"h-full grid place-items-center mt-64\">\r\n      <Frame\r\n        center\r\n        initial={{ opacity: 0 }}\r\n        animate={{ opacity: 1 }}\r\n        exit={{ opacity: 0 }}\r\n        backgroundColor=\"none\"\r\n      >\r\n        <StyledSpinner />\r\n      </Frame>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Loader;\r\n","import { motion } from \"framer\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { firebase, projectFireStore } from \"../config/firebase\";\r\nimport GradientBlock from \"./GradientBlock\";\r\nimport Loader from \"./Loader\";\r\n\r\nconst SavedGradients = () => {\r\n  let [data, setData] = useState([]);\r\n\r\n  useEffect(() => {\r\n    firebase.auth().onAuthStateChanged((user) => {\r\n      projectFireStore\r\n        .collection(\"users\")\r\n        .doc(user.uid)\r\n        .get()\r\n        .then((doc) => {\r\n          setData(doc.data() ? doc.data() : null);\r\n        });\r\n    });\r\n  }, []);\r\n\r\n  // useEffect(() => {\r\n  //   firebase.auth().onAuthStateChanged((user) => {\r\n  //     projectFireStore.collection(\"users\").doc(user.uid).set({\r\n  //       email: user.email,\r\n  //       count: data,\r\n  //     });\r\n  //   });\r\n  // }, []);\r\n\r\n  return (\r\n    <motion.div initial={{ x: -100 }} animate={{ x: 0 }}>\r\n      {console.log(data)}\r\n      {data.length != 0 ? (\r\n        data.count.map((dat) => <GradientBlock color={dat} />)\r\n      ) : (\r\n        <Loader />\r\n      )}\r\n    </motion.div>\r\n  );\r\n};\r\n\r\nexport default SavedGradients;\r\n","import React from 'react'\r\n\r\nexport const AppContext = React.createContext({ isLoggedIn: false, user: {} });","import React, { useContext, useEffect, useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport GradientBlock from \"../components/GradientBlock\";\r\nimport tw from \"twin.macro\";\r\nimport { firebase } from \"../config/firebase\";\r\nimport SavedGradients from \"../components/SavedGradients\";\r\nimport { AppContext } from \"../store/AppContext\";\r\n\r\nconst StyledDiv = styled.div`\r\n  ${tw`grid sm:grid-cols-3`}\r\n`;\r\n\r\nconst Gallery = () => {\r\n  const [userData, getCurrentUserData] = useState(null);\r\n  const [isLoggedin] = useContext(AppContext);\r\n\r\n  return (\r\n    <>\r\n      <StyledDiv>\r\n        <GradientBlock color='from-red-100 to-blue-200' />\r\n        <GradientBlock color='from-red-100 to-blue-200' />\r\n        <GradientBlock color='from-red-100 to-blue-200' />\r\n      </StyledDiv>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Gallery;\r\n","import React from \"react\";\r\nimport Home from \"../page/Home\";\r\nimport Login from \"../page/Login\";\r\nimport Gallery from \"../page/Gallery\";\r\nimport SavedGradients from \"../components/SavedGradients\";\r\nimport BrowseGradient from \"../components/BrowseGradient\";\r\n\r\nexport default [\r\n  {\r\n    path: \"/\",\r\n    exact: \"true\",\r\n    component: () => <Home />,\r\n  },\r\n  {\r\n    path: \"/login\",\r\n    component: () => <Login />,\r\n  },\r\n  {\r\n    path: \"/explore\",\r\n    component: () => <Gallery />,\r\n  },\r\n  {\r\n    path: \"/saved\",\r\n    component: () => <SavedGradients />,\r\n  },\r\n  {\r\n    path: \"/browse-gradients\",\r\n    component: () => <BrowseGradient />,\r\n  },\r\n  {\r\n    path: \"*\",\r\n    component: () => <Home />,\r\n  },\r\n];\r\n","import React, { useContext } from \"react\";\r\nimport { Redirect, Route } from \"react-router-dom\";\r\nimport { AppContext } from \"../../store/AppContext\";\r\n\r\nconst AuthRoute = (props) => {\r\n  const [isLoggedin] = useContext(AppContext);\r\n\r\n  if (isLoggedin) return <Route {...props} />;\r\n\r\n  return <Redirect to=\"/login\" />;\r\n};\r\n\r\nexport default AuthRoute;\r\n","import React, { useContext } from \"react\";\r\nimport { Redirect, Route } from \"react-router-dom\";\r\nimport { AppContext } from \"../../store/AppContext\";\r\n\r\nconst GuestRoute = (props) => {\r\n  const [isLoggedin] = useContext(AppContext);\r\n\r\n  if (!isLoggedin) return <Route {...props} />;\r\n\r\n  return <Redirect to=\"/\" />;\r\n};\r\n\r\nexport default GuestRoute;\r\n","import React, { useState, useContext } from \"react\";\r\nimport { Link, NavLink, useHistory } from \"react-router-dom\";\r\nimport { firebase } from \"../config/firebase\";\r\nimport { AppContext } from \"../store/AppContext\";\r\nimport { List, ButtonPrimary } from \"./theme\";\r\nimport head from \"../assets/images/head-img.svg\";\r\n\r\nconst Header = () => {\r\n  const [isLoggedIn, user] = useContext(AppContext);\r\n\r\n  const history = useHistory();\r\n\r\n  const logout = () => {\r\n    firebase\r\n      .auth()\r\n      .signOut()\r\n      .then((res) => {\r\n        history.replace(\"/login\");\r\n      })\r\n      .catch((e) => console.log(e.response.data));\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <List>\r\n        <ul>\r\n          <li>\r\n            <NavLink to=\"/\">\r\n              <img className=\"w-20\" src={head}></img>\r\n            </NavLink>\r\n          </li>\r\n          {isLoggedIn && (\r\n            <>\r\n              <li>\r\n                <NavLink to=\"/explore\">Explore</NavLink>\r\n              </li>\r\n              <li>\r\n                <NavLink to=\"/saved\">Saved</NavLink>\r\n              </li>\r\n            </>\r\n          )}\r\n        </ul>\r\n        <ul>\r\n          <li>\r\n            {isLoggedIn ? (\r\n              <ButtonPrimary onClick={logout}>Logout</ButtonPrimary>\r\n            ) : (\r\n              <Link to=\"/login\">\r\n                <ButtonPrimary>Login</ButtonPrimary>\r\n              </Link>\r\n            )}\r\n          </li>\r\n          {!isLoggedIn && (\r\n            <li>\r\n              <NavLink to=\"/signup\">\r\n                <ButtonPrimary>Sign Up</ButtonPrimary>\r\n              </NavLink>\r\n            </li>\r\n          )}\r\n        </ul>\r\n      </List>\r\n      <hr></hr>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport \"./assets/tailwind.css\";\r\nimport {\r\n  BrowserRouter as Router,\r\n  Route,\r\n  Switch,\r\n  Link,\r\n  Redirect,\r\n} from \"react-router-dom\";\r\nimport routes from \"./utils/routes\";\r\nimport { firebase, projectFireStore } from \"./config/firebase\";\r\nimport { AppContext } from \"./store/AppContext\";\r\nimport AuthRoute from \"./utils/routes/AuthRoute\";\r\nimport GuestRoute from \"./utils/routes/GuestRoute\";\r\nimport Header from \"./components/Navbar\";\r\nimport Loader from \"./components/Loader\";\r\n\r\nfunction App() {\r\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\r\n  const [user, setUser] = useState({});\r\n  const [isLoading, setIsLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    firebase.auth().onAuthStateChanged((user) => {\r\n      if (user) {\r\n        setIsLoggedIn(true);\r\n        setUser(user);\r\n        setIsLoading(false);\r\n      } else {\r\n        setUser({});\r\n        setIsLoggedIn(false);\r\n        setIsLoading(false);\r\n      }\r\n      console.log(\"Logged in\", user.displayName);\r\n    });\r\n  }, []);\r\n\r\n  if (isLoading) return <Loader />;\r\n\r\n  return (\r\n    <Router>\r\n      <AppContext.Provider value={[isLoggedIn, user]}>\r\n        <Header />\r\n        <Switch>\r\n          {routes.map((route, index) => {\r\n            if (route.path === \"/login\") {\r\n              return (\r\n                <GuestRoute\r\n                  key={index}\r\n                  exact={route.exact}\r\n                  path={route.path}\r\n                  component={route.component}\r\n                />\r\n              );\r\n            }\r\n            if (route.path === \"/explore\") {\r\n              return (\r\n                <AuthRoute\r\n                  key={index}\r\n                  exact={route.exact}\r\n                  path={route.path}\r\n                  component={route.component}\r\n                />\r\n              );\r\n            }\r\n            if (route.path === \"/saved\") {\r\n              return (\r\n                <AuthRoute\r\n                  key={index}\r\n                  exact={route.exact}\r\n                  path={route.path}\r\n                  component={route.component}\r\n                />\r\n              );\r\n            }\r\n\r\n            return (\r\n              <Route\r\n                key={index}\r\n                exact={route.exact}\r\n                path={route.path}\r\n                component={route.component}\r\n              />\r\n            );\r\n          })}\r\n          <Route path=\"*\">\r\n            <h1>Not found</h1>\r\n          </Route>\r\n        </Switch>\r\n      </AppContext.Provider>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport \"./assets/styles.css\"\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","module.exports = __webpack_public_path__ + \"static/media/head-img.a46d4d8c.svg\";"],"sourceRoot":""}