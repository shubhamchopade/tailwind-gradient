{"version":3,"sources":["components/theme.js","utils/hooks/useKeyPress.js","utils/hooks/useRandom.js","components/RandomGradient.js","components/BrowseGradientBlock.js","utils/gradients/data.js","components/BrowseGradientComponent.js","components/BrowseGradient.js","page/Home.js","config/firebase.js","components/Input.js","components/Signup.js","page/Login.js","components/Loader.js","components/SavedGradients.js","store/AppContext.js","page/Gallery.js","utils/routes.js","utils/routes/AuthRoute.js","utils/routes/GuestRoute.js","components/Navbar.js","App.js","serviceWorker.js","index.js","assets/images/head-img.svg"],"names":["ButtonPrimary","styled","button","attrs","className","props","primary","secondary","List","ul","H1","h1","StyledLink","a","toggle","BrowseLayout","section","BrowseGridContainer","require","useState","useEffect","useKeyPress","keycode","keyPressed","setKeyPressed","downHandler","e","preventDefault","keyCode","window","addEventListener","removeEventListener","useRandom","spaceBar","colors","weights","randomColor","setRandomColor","randomWeight","setRandomWeight","randomColor1","setRandomColor1","randomWeight1","setRandomWeight1","randomNumber","Math","ceil","random","length","randomNumber1","randomNumber2","randomNumber3","RandomGradient","randomTo","setRandomTo","setSpaceBar","From","setFrom","To","setTo","handleClick","div","initial","x","animate","onClick","BrowseGradientBlock","color","warmColorsWeights","name","BrowseGradientComponent","heading","map","GradColor","BrowseGradient","index","key","Home","setToggle","console","log","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","storage","projectFireStore","firestore","StyledErrorMessage","ErrorMessage","Input","setIsLoggedIn","initialValues","email","password","onSubmit","value","auth","signInWithEmailAndPassword","then","validationSchema","Yup","required","min","formik","class","type","placeholder","component","id","for","href","fill","viewBox","fill-rule","d","clip-rule","Signup","createUserWithEmailAndPassword","Button","motion","Login","isLoggedIn","history","useHistory","provider","GoogleAuthProvider","replace","whileHover","scale","whileTap","signInWithRedirect","result","credential","accessToken","user","catch","error","code","message","StyledSpinner","FaCircleNotch","size","Loader","SavedGradients","data","setData","isLoading","setIsLoading","onAuthStateChanged","collection","doc","uid","get","count","dat","AppContext","React","createContext","StyledDiv","Gallery","useContext","path","exact","AuthRoute","to","GuestRoute","Header","src","head","signOut","res","response","App","setUser","displayName","Provider","routes","route","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","module","exports"],"mappings":"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","file":"static/js/main.81a117e7.chunk.js","sourcesContent":["import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport tw from \"twin.macro\";\r\nimport { Link, NavLink } from \"react-router-dom\";\r\n\r\nexport const ButtonPrimary = styled.button.attrs({\r\n  className: \"px-4 py-2 rounded\",\r\n})`\r\n  ${(props) => {\r\n    if (props.primary) return tw`bg-red-200`;\r\n    else if (props.secondary) return tw`border border-blue-200`;\r\n    else return tw`border border-blue-200`;\r\n  }}\r\n`;\r\nexport const List = styled.ul`\r\n  ${tw`flex m-2 justify-between items-center`}\r\n\r\n  ul {\r\n    ${tw`flex`}\r\n  }\r\n\r\n  li {\r\n    ${tw`p-2 hover:opacity-75`}\r\n\r\n    &:active {\r\n      ${tw`underline`}\r\n    }\r\n  }\r\n`;\r\n\r\nexport const H1 = styled.h1`\r\n  ${tw`text-5xl text-gray-700 text-center`}\r\n`;\r\n\r\nexport const StyledLink = styled.a`\r\n  ${tw`text-sm text-gray-600 cursor-pointer my-6 p-2 active:underline`}\r\n  ${({ toggle }) => {\r\n    if (toggle) return tw`text-gray-800 underline`;\r\n    else return \"\";\r\n  }}\r\n`;\r\n\r\nexport const BrowseLayout = styled.section`\r\n  ${tw`grid grid-cols-1 md:grid-cols-3 sm:grid-cols-2`}\r\n`;\r\nexport const BrowseGridContainer = styled.section`\r\n  ${tw`max-w-6xl mx-auto p-2 my-4`}\r\n\r\n  h2 {\r\n    ${tw`pl-2 text-gray-500 uppercase`}\r\n  }\r\n`;\r\n","const { useState, useEffect } = require(\"react\");\r\n\r\nfunction useKeyPress(keycode) {\r\n  const [keyPressed, setKeyPressed] = useState(false);\r\n\r\n  function downHandler(e) {\r\n    e.preventDefault();\r\n    if (e.keyCode == keycode) {\r\n      setKeyPressed(true);\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    window.addEventListener(\"keydown\", downHandler);\r\n\r\n    return () => window.removeEventListener(\"keydown\", downHandler);\r\n    // window.addEventListener(\"keyup\", upHandler);\r\n  }, []);\r\n\r\n  return [keyPressed, setKeyPressed];\r\n}\r\n\r\nexport default useKeyPress;\r\n","const { useEffect, useState } = require(\"react\");\r\n\r\nconst useRandom = (spaceBar, colors, weights) => {\r\n  const [randomColor, setRandomColor] = useState(\"gray\");\r\n  const [randomWeight, setRandomWeight] = useState(\"400\");\r\n  const [randomColor1, setRandomColor1] = useState(\"gray\");\r\n  const [randomWeight1, setRandomWeight1] = useState(\"400\");\r\n\r\n  const randomNumber = Math.ceil(Math.random() * colors.length - 1);\r\n  const randomNumber1 = Math.ceil(Math.random() * weights.length - 1);\r\n  const randomNumber2 = Math.ceil(Math.random() * colors.length - 1);\r\n  const randomNumber3 = Math.ceil(Math.random() * weights.length - 1);\r\n\r\n  useEffect(() => {\r\n    setRandomColor(colors[randomNumber]);\r\n    setRandomWeight(weights[randomNumber1]);\r\n  }, [spaceBar]);\r\n\r\n  useEffect(() => {\r\n    setRandomColor1(colors[randomNumber2]);\r\n    setRandomWeight1(weights[randomNumber3]);\r\n  }, [spaceBar]);\r\n\r\n  return [randomColor, randomWeight, randomColor1, randomWeight1];\r\n};\r\n\r\nexport default useRandom;\r\n","import React, { useEffect, useState, useRef } from \"react\";\r\nimport { ButtonPrimary, StyledLink } from \"./theme\";\r\nimport useKeyPress from \"../utils/hooks/useKeyPress\";\r\nimport { motion } from \"framer\";\r\nimport { FaExclamationCircle } from \"react-icons/fa\";\r\nimport useRandom from \"../utils/hooks/useRandom\";\r\n\r\nconst colors = [\"blue\", \"yellow\", \"green\", \"gray\", \"red\", \"orange\"];\r\nconst weights = [100, 200, 300, 400, 500, 600, 700, 800, 900];\r\n\r\nconst RandomGradient = () => {\r\n  const [randomTo, setRandomTo] = useState();\r\n  let [spaceBar, setSpaceBar] = useKeyPress(32);\r\n  let [randomColor, randomWeight, randomColor1, randomWeight1] = useRandom(\r\n    spaceBar,\r\n    colors,\r\n    weights\r\n  );\r\n  let [From, setFrom] = useState(\"red-300\");\r\n  let [To, setTo] = useState(\"yellow-500\");\r\n\r\n  useEffect(() => {\r\n    handleClick();\r\n    return () => setSpaceBar(false);\r\n  }, [spaceBar]);\r\n\r\n  const handleClick = () => {\r\n    setFrom(`${randomColor}-${randomWeight}`);\r\n    // console.log(randomColor, \"from\", randomWeight);\r\n    setTo(`${randomColor1}-${randomWeight1}`);\r\n    // console.log(randomColor1, \"to\", randomWeight1);\r\n    setRandomTo(`from-${From} to-${To}`);\r\n  };\r\n\r\n  return (\r\n    <motion.div initial={{ x: -100 }} animate={{ x: 0 }}>\r\n      <motion.div>\r\n        <div className={`h-64 bg-gradient-to-r ${randomTo}`}></div>\r\n      </motion.div>\r\n\r\n      <div className=\"flex mx-auto justify-around max-w-xs items-center rounded p-2 bg-gray-200 my-4\">\r\n        <FaExclamationCircle />\r\n        <p className=\"text-xs\">Press Spacebar to Generate a random Gradient</p>\r\n      </div>\r\n      <ButtonPrimary\r\n        className=\"sm:hidden flex mx-auto justify-around max-w-xs items-center my-2\"\r\n        primary\r\n        onClick={handleClick}\r\n      >\r\n        Generate\r\n      </ButtonPrimary>\r\n    </motion.div>\r\n  );\r\n};\r\n\r\nexport default RandomGradient;\r\n","import React from \"react\";\r\n\r\nconst BrowseGradientBlock = ({ color }) => {\r\n  return (\r\n    <div\r\n      className={`h-40 shadow-md bg-gradient-to-t ${color} m-2 w-9/11 rounded`}\r\n    />\r\n  );\r\n};\r\n\r\nexport default BrowseGradientBlock;\r\n","export const warmColors = [\"yellow\", \"red\", \"orange\"];\r\nexport const warmColorsWeights = [\"300\", \"400\", \"500\", \"600\", \"700\"];\r\n\r\nexport const colors = [\r\n  {\r\n    name: \"warm\",\r\n    color: [\"yellow\", \"red\", \"orange\"],\r\n  },\r\n  {\r\n    name: \"cool\",\r\n    color: [\"blue\", \"teal\", \"green\"],\r\n  },\r\n  {\r\n    name: \"fresh\",\r\n    color: [\"green\", \"blue\", \"yellow\"],\r\n  },\r\n  {\r\n    name: \"dull\",\r\n    color: [\"teal\", \"gray\", \"pink\"],\r\n  },\r\n];\r\n","import React from \"react\";\r\nimport { BrowseLayout } from \"./theme\";\r\nimport BrowseGradientBlock from \"../components/BrowseGradientBlock\";\r\n\r\nconst BrowseGradientComponent = ({ heading, colors, weights }) => {\r\n  return (\r\n    <div className=\"border border-gray-200 rounded p-2 my-4\">\r\n      <h2>{heading}</h2>\r\n      <BrowseLayout>\r\n        {colors.map((GradColor) => (\r\n          <BrowseGradientBlock\r\n            color={`from-${GradColor}-300 to-${GradColor}-500`}\r\n          />\r\n        ))}\r\n      </BrowseLayout>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BrowseGradientComponent;\r\n","import { motion } from \"framer\";\r\nimport React, { useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport BrowseGradientBlock from \"../components/BrowseGradientBlock\";\r\nimport tw from \"twin.macro\";\r\nimport { BrowseLayout, H1, BrowseGridContainer } from \"./theme\";\r\nimport { warmColorsWeights, colors } from \"../utils/gradients/data\";\r\nimport BrowseGradientComponent from \"./BrowseGradientComponent\";\r\n\r\nconst BrowseGradient = () => {\r\n  let [From, setFrom] = useState(\"red-300\");\r\n  let [To, setTo] = useState(\"yellow-500\");\r\n\r\n  return (\r\n    <motion.div initial={{ x: 100 }} animate={{ x: 0 }}>\r\n      <H1>Explore Beautiful Gradients</H1>\r\n      <>\r\n        <BrowseGridContainer>\r\n          {colors.map((color, index) => (\r\n            <BrowseGradientComponent\r\n              key={index}\r\n              heading={color.name}\r\n              colors={color.color}\r\n              weights={warmColorsWeights}\r\n            />\r\n          ))}\r\n        </BrowseGridContainer>\r\n      </>\r\n      ;\r\n    </motion.div>\r\n  );\r\n};\r\n\r\nexport default BrowseGradient;\r\n","import React, { useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport tw from \"twin.macro\";\r\nimport RandomGradient from \"../components/RandomGradient\";\r\nimport BrowseGradient from \"../components/BrowseGradient\";\r\nimport { StyledLink } from \"../components/theme\";\r\n\r\nconst Home = () => {\r\n  const [toggle, setToggle] = useState(true);\r\n\r\n  const handleRandom = () => setToggle(true);\r\n  const handleBrowse = () => setToggle(false);\r\n\r\n  console.log(toggle);\r\n  return (\r\n    <div>\r\n      <div className=\"flex justify-around max-w-6xl mx-auto\">\r\n        <StyledLink onClick={handleRandom} toggle={toggle}>\r\n          Generate Random Gradient\r\n        </StyledLink>\r\n        <StyledLink onClick={handleBrowse} toggle={!toggle}>\r\n          Browse Gradients\r\n        </StyledLink>\r\n      </div>\r\n      {toggle ? <RandomGradient /> : <BrowseGradient />}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import firebase from 'firebase'\r\nimport 'firebase/firestore'\r\n\r\nvar firebaseConfig = {\r\n  apiKey: \"AIzaSyDAiHVo0r2yn_OMSWxHm8DxwhWcb2_c-BI\",\r\n  authDomain: \"react-auth-88b56.firebaseapp.com\",\r\n  databaseURL: \"https://react-auth-88b56.firebaseio.com\",\r\n  projectId: \"react-auth-88b56\",\r\n  storageBucket: \"react-auth-88b56.appspot.com\",\r\n  messagingSenderId: \"491935843921 \",\r\n  appId: \"1:491935843921:web:596835e765857e28f89a70\"\r\n};\r\n// Initialize Firebase\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nconst projectStorage = firebase.storage();\r\nconst projectFireStore = firebase.firestore();\r\n\r\nexport {firebase, projectFireStore, projectStorage}","import {\r\n  ErrorMessage,\r\n  Field,\r\n  Form,\r\n  Formik,\r\n  useFormik,\r\n  yupToFormErrors,\r\n} from \"formik\";\r\nimport React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport tw from \"twin.macro\";\r\nimport * as Yup from \"yup\";\r\nimport { firebase } from \"../config/firebase\";\r\n\r\nconst StyledErrorMessage = styled(ErrorMessage)`\r\n  color: red;\r\n  font-size: 12px;\r\n  margin-top: 2px;\r\n`;\r\n\r\nconst Input = ({ setIsLoggedIn }) => {\r\n  return (\r\n    <Formik\r\n      initialValues={{ email: \"\", password: \"\" }}\r\n      onSubmit={(value) => {\r\n        firebase\r\n          .auth()\r\n          .signInWithEmailAndPassword(value.email, value.password)\r\n          .then(setIsLoggedIn(true));\r\n      }}\r\n      validationSchema={Yup.object({\r\n        email: Yup.string()\r\n          .required(\"Email is Required\")\r\n          .email(\"Email is invalid\"),\r\n        password: Yup.string()\r\n          .required(\"Password is required\")\r\n          .min(6, \"Password should be min 6 characters\"),\r\n      })}\r\n    >\r\n      {(formik) => (\r\n        <div class=\"flex w-3/12 items-center justify-center bg-gray-50 px-4 sm:px-6 lg:px-8\">\r\n          <div class=\"max-w-md w-full\">\r\n            <div></div>\r\n            <Form class=\"\">\r\n              <input type=\"hidden\" name=\"remember\" value=\"true\" />\r\n              <div class=\"rounded-md shadow-sm\">\r\n                <div>\r\n                  <Field\r\n                    name=\"email\"\r\n                    type=\"email\"\r\n                    required\r\n                    className=\"appearance-none rounded-none relative block w-full px-3 py-2 border border-gray-300 placeholder-gray-500 text-gray-900 rounded-t-md focus:outline-none focus:shadow-outline-blue focus:border-blue-300 focus:z-10 sm:text-sm sm:leading-5\"\r\n                    placeholder=\"Email address\"\r\n                  />\r\n                  <StyledErrorMessage name=\"email\" component=\"p\" />\r\n                </div>\r\n                <div class=\"-mt-px\">\r\n                  <Field\r\n                    name=\"password\"\r\n                    type=\"password\"\r\n                    required\r\n                    className=\"appearance-none rounded-none relative block w-full px-3 py-2 border border-gray-300 placeholder-gray-500 text-gray-900 rounded-t-md focus:outline-none focus:shadow-outline-blue focus:border-blue-300 focus:z-10 sm:text-sm sm:leading-5\"\r\n                    placeholder=\"Password\"\r\n                  />\r\n                  <StyledErrorMessage name=\"password\" component=\"p\" />\r\n                </div>\r\n              </div>\r\n\r\n              <div class=\"mt-6 flex items-center justify-between\">\r\n                <div class=\"flex items-center\">\r\n                  <input\r\n                    id=\"remember_me\"\r\n                    type=\"checkbox\"\r\n                    class=\"form-checkbox h-4 w-4 text-indigo-600 transition duration-150 ease-in-out\"\r\n                  />\r\n                  <label\r\n                    for=\"remember_me\"\r\n                    class=\"ml-2 block text-sm leading-5 text-gray-900\"\r\n                  >\r\n                    Remember me\r\n                  </label>\r\n                </div>\r\n\r\n                <div class=\"text-sm leading-5\">\r\n                  <a\r\n                    href=\"#\"\r\n                    class=\"font-medium text-indigo-600 hover:text-indigo-500 focus:outline-none focus:underline transition ease-in-out duration-150\"\r\n                  >\r\n                    Forgot your password?\r\n                  </a>\r\n                </div>\r\n              </div>\r\n\r\n              <div class=\"mt-6\">\r\n                <button\r\n                  type=\"submit\"\r\n                  class=\"group relative w-full flex justify-center py-2 px-4 border border-transparent text-sm leading-5 font-medium rounded-md text-white bg-indigo-600 hover:bg-indigo-500 focus:outline-none focus:border-indigo-700 focus:shadow-outline-indigo active:bg-indigo-700 transition duration-150 ease-in-out\"\r\n                >\r\n                  <span class=\"absolute left-0 inset-y-0 flex items-center pl-3\">\r\n                    <svg\r\n                      class=\"h-5 w-5 text-indigo-500 group-hover:text-indigo-400 transition ease-in-out duration-150\"\r\n                      fill=\"currentColor\"\r\n                      viewBox=\"0 0 20 20\"\r\n                    >\r\n                      <path\r\n                        fill-rule=\"evenodd\"\r\n                        d=\"M5 9V7a5 5 0 0110 0v2a2 2 0 012 2v5a2 2 0 01-2 2H5a2 2 0 01-2-2v-5a2 2 0 012-2zm8-2v2H7V7a3 3 0 016 0z\"\r\n                        clip-rule=\"evenodd\"\r\n                      />\r\n                    </svg>\r\n                  </span>\r\n                  Sign in\r\n                </button>\r\n              </div>\r\n            </Form>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </Formik>\r\n  );\r\n};\r\n\r\nexport default Input;\r\n","import {\r\n  ErrorMessage,\r\n  Field,\r\n  Form,\r\n  Formik,\r\n  useFormik,\r\n  yupToFormErrors,\r\n} from \"formik\";\r\nimport React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport tw from \"twin.macro\";\r\nimport * as Yup from \"yup\";\r\nimport { firebase } from \"../config/firebase\";\r\n\r\nconst StyledErrorMessage = styled(ErrorMessage)`\r\n  color: red;\r\n  font-size: 12px;\r\n  margin-top: 2px;\r\n`;\r\n\r\nconst Signup = ({ setIsLoggedIn }) => {\r\n  return (\r\n    <Formik\r\n      initialValues={{ email: \"\", password: \"\" }}\r\n      onSubmit={(value) => {\r\n        firebase\r\n          .auth()\r\n          .createUserWithEmailAndPassword(value.email, value.password)\r\n          .then(setIsLoggedIn(true));\r\n      }}\r\n      validationSchema={Yup.object({\r\n        email: Yup.string()\r\n          .required(\"Email is Required\")\r\n          .email(\"Email is invalid\"),\r\n        password: Yup.string()\r\n          .required(\"Password is required\")\r\n          .min(6, \"Password should be min 6 characters\"),\r\n      })}\r\n    >\r\n      {(formik) => (\r\n        <div class=\"flex w-3/12 items-center justify-center bg-gray-50 px-4 sm:px-6 lg:px-8\">\r\n          <div class=\"max-w-md w-full\">\r\n            <div></div>\r\n            <Form class=\"\">\r\n              <input type=\"hidden\" name=\"remember\" value=\"true\" />\r\n              <div class=\"rounded-md shadow-sm\">\r\n                <div>\r\n                  <Field\r\n                    name=\"email\"\r\n                    type=\"email\"\r\n                    required\r\n                    className=\"appearance-none rounded-none relative block w-full px-3 py-2 border border-gray-300 placeholder-gray-500 text-gray-900 rounded-t-md focus:outline-none focus:shadow-outline-blue focus:border-blue-300 focus:z-10 sm:text-sm sm:leading-5\"\r\n                    placeholder=\"Email address\"\r\n                  />\r\n                  <StyledErrorMessage name=\"email\" component=\"p\" />\r\n                </div>\r\n                <div class=\"-mt-px\">\r\n                  <Field\r\n                    name=\"password\"\r\n                    type=\"password\"\r\n                    required\r\n                    className=\"appearance-none rounded-none relative block w-full px-3 py-2 border border-gray-300 placeholder-gray-500 text-gray-900 rounded-t-md focus:outline-none focus:shadow-outline-blue focus:border-blue-300 focus:z-10 sm:text-sm sm:leading-5\"\r\n                    placeholder=\"Password\"\r\n                  />\r\n                  <StyledErrorMessage name=\"password\" component=\"p\" />\r\n                </div>\r\n              </div>\r\n\r\n              <div class=\"mt-6 flex items-center justify-between\">\r\n                <div class=\"flex items-center\">\r\n                  <input\r\n                    id=\"remember_me\"\r\n                    type=\"checkbox\"\r\n                    class=\"form-checkbox h-4 w-4 text-indigo-600 transition duration-150 ease-in-out\"\r\n                  />\r\n                  <label\r\n                    for=\"remember_me\"\r\n                    class=\"ml-2 block text-sm leading-5 text-gray-900\"\r\n                  >\r\n                    Remember me\r\n                  </label>\r\n                </div>\r\n\r\n                <div class=\"text-sm leading-5\">\r\n                  <a\r\n                    href=\"#\"\r\n                    class=\"font-medium text-indigo-600 hover:text-indigo-500 focus:outline-none focus:underline transition ease-in-out duration-150\"\r\n                  >\r\n                    Forgot your password?\r\n                  </a>\r\n                </div>\r\n              </div>\r\n\r\n              <div class=\"mt-6\">\r\n                <button\r\n                  type=\"submit\"\r\n                  class=\"group relative w-full flex justify-center py-2 px-4 border border-transparent text-sm leading-5 font-medium rounded-md text-white bg-indigo-600 hover:bg-indigo-500 focus:outline-none focus:border-indigo-700 focus:shadow-outline-indigo active:bg-indigo-700 transition duration-150 ease-in-out\"\r\n                >\r\n                  <span class=\"absolute left-0 inset-y-0 flex items-center pl-3\">\r\n                    <svg\r\n                      class=\"h-5 w-5 text-indigo-500 group-hover:text-indigo-400 transition ease-in-out duration-150\"\r\n                      fill=\"currentColor\"\r\n                      viewBox=\"0 0 20 20\"\r\n                    >\r\n                      <path\r\n                        fill-rule=\"evenodd\"\r\n                        d=\"M5 9V7a5 5 0 0110 0v2a2 2 0 012 2v5a2 2 0 01-2 2H5a2 2 0 01-2-2v-5a2 2 0 012-2zm8-2v2H7V7a3 3 0 016 0z\"\r\n                        clip-rule=\"evenodd\"\r\n                      />\r\n                    </svg>\r\n                  </span>\r\n                  Sign in\r\n                </button>\r\n              </div>\r\n            </Form>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </Formik>\r\n  );\r\n};\r\n\r\nexport default Signup;\r\n","import React, { useState } from \"react\";\r\nimport { Redirect, useHistory } from \"react-router-dom\";\r\nimport { firebase } from \"../config/firebase\";\r\nimport Input from \"../components/Input\";\r\nimport { Frame, motion } from \"framer\";\r\nimport styled from \"styled-components\";\r\nimport { FaGoogle } from \"react-icons/fa\";\r\nimport Signup from \"../components/Signup\";\r\n\r\nconst Button = styled(motion.button)`\r\n  width: 270px;\r\n  height: 50px;\r\n  padding: 1rem;\r\n  background: lightblue;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-around;\r\n`;\r\n\r\nconst Login = () => {\r\n  const [form, setForm] = useState({ email: \"\", password: \"\" });\r\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\r\n  const history = useHistory();\r\n  const provider = new firebase.auth.GoogleAuthProvider();\r\n  const handleGoogle = () => {\r\n    firebase\r\n      .auth()\r\n      .signInWithRedirect(provider)\r\n      .then(function (result) {\r\n        var token = result.credential.accessToken;\r\n        setIsLoggedIn(true);\r\n        var user = result.user;\r\n      })\r\n      .catch(function (error) {\r\n        var errorCode = error.code;\r\n        var errorMessage = error.message;\r\n\r\n        var email = error.email;\r\n\r\n        var credential = error.credential;\r\n        // ...\r\n      });\r\n  };\r\n\r\n  if (isLoggedIn) {\r\n    history.replace(\"/\");\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <motion.div\r\n        initial={{ x: -100 }}\r\n        animate={{ x: 0 }}\r\n        className=\"flex items-center justify-center flex-col\"\r\n      >\r\n        <h2 class=\"my-6 text-center text-xl leading-9 font-bold text-gray-700\">\r\n          Login to your account\r\n        </h2>\r\n        <Button\r\n          whileHover={{ scale: 1.1 }}\r\n          whileTap={{ scale: 0.9 }}\r\n          onClick={handleGoogle}\r\n          className=\"\"\r\n        >\r\n          <FaGoogle />\r\n          Continue with Google\r\n        </Button>\r\n        <p className=\"text-center text-gray-500 my-4\">OR</p>\r\n        <Input setIsLoggedIn={setIsLoggedIn} />\r\n      </motion.div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","import { Frame, motion } from \"framer\";\r\nimport React from \"react\";\r\nimport { FaCircleNotch, FaSpinner } from \"react-icons/fa\";\r\nimport styled from \"styled-components\";\r\nimport tw from \"twin.macro\";\r\n\r\nconst StyledSpinner = styled(FaCircleNotch).attrs({\r\n  size: 60,\r\n})`\r\n  ${tw`text-orange-500`}\r\n  animation: spin 2s ease-in-out infinite;\r\n  @keyframes spin {\r\n    0% {\r\n      transform: rotate(0);\r\n    }\r\n    100% {\r\n      transform: rotate(360deg);\r\n    }\r\n  }\r\n`;\r\n\r\nconst Loader = () => {\r\n  return (\r\n    <motion.div className=\"flex items-center h-screen justify-center\">\r\n      <StyledSpinner />\r\n    </motion.div>\r\n  );\r\n};\r\n\r\nexport default Loader;\r\n","import { motion } from \"framer\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { firebase, projectFireStore } from \"../config/firebase\";\r\nimport BrowseGradientBlock from \"./BrowseGradientBlock\";\r\nimport Loader from \"./Loader\";\r\n\r\nconst SavedGradients = () => {\r\n  let [data, setData] = useState([]);\r\n  let [isLoading, setIsLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    firebase.auth().onAuthStateChanged((user) => {\r\n      projectFireStore\r\n        .collection(\"users\")\r\n        .doc(user.uid)\r\n        .get()\r\n        .then((doc) => {\r\n          setData(doc.data() ? doc.data() : null);\r\n          setIsLoading(false);\r\n        });\r\n    });\r\n  }, []);\r\n\r\n  // useEffect(() => {\r\n  //   firebase.auth().onAuthStateChanged((user) => {\r\n  //     projectFireStore.collection(\"users\").doc(user.uid).set({\r\n  //       email: user.email,\r\n  //       count: data,\r\n  //     });\r\n  //   });\r\n  // }, []);\r\n\r\n  if (isLoading) return <Loader />;\r\n\r\n  return (\r\n    <motion.div initial={{ x: -100 }} animate={{ x: 0 }}>\r\n      {data === null ? (\r\n        <p>No Saved Gradients</p>\r\n      ) : (\r\n        data.count.map((dat) => <BrowseGradientBlock color={dat} />)\r\n      )}\r\n    </motion.div>\r\n  );\r\n};\r\n\r\nexport default SavedGradients;\r\n","import React from 'react'\r\n\r\nexport const AppContext = React.createContext({ isLoggedIn: false, user: {} });","import React, { useContext, useEffect, useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport BrowseGradientBlock from \"../components/BrowseGradientBlock\";\r\nimport tw from \"twin.macro\";\r\nimport { firebase } from \"../config/firebase\";\r\nimport SavedGradients from \"../components/SavedGradients\";\r\nimport { AppContext } from \"../store/AppContext\";\r\n\r\nconst StyledDiv = styled.div`\r\n  ${tw`grid grid-cols-1 md:grid-cols-3 sm:grid-cols-2`}\r\n`;\r\n\r\nconst Gallery = () => {\r\n  const [userData, getCurrentUserData] = useState(null);\r\n  const [isLoggedin] = useContext(AppContext);\r\n\r\n  return (\r\n    <>\r\n      <StyledDiv>\r\n        <BrowseGradientBlock color=\"from-red-100 to-blue-200\" />\r\n        <BrowseGradientBlock color=\"from-red-100 to-blue-200\" />\r\n        <BrowseGradientBlock color=\"from-red-100 to-blue-200\" />\r\n      </StyledDiv>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Gallery;\r\n","import React from \"react\";\r\nimport Home from \"../page/Home\";\r\nimport Login from \"../page/Login\";\r\nimport Gallery from \"../page/Gallery\";\r\nimport SavedGradients from \"../components/SavedGradients\";\r\nimport BrowseGradient from \"../components/BrowseGradient\";\r\nimport Signup from \"../components/Signup\";\r\n\r\nexport default [\r\n  {\r\n    path: \"/\",\r\n    exact: \"true\",\r\n    component: () => <Home />,\r\n  },\r\n  {\r\n    path: \"/login\",\r\n    component: () => <Login />,\r\n  },\r\n  {\r\n    path: \"/signup\",\r\n    component: () => <Signup />,\r\n  },\r\n  {\r\n    path: \"/explore\",\r\n    component: () => <Gallery />,\r\n  },\r\n  {\r\n    path: \"/saved\",\r\n    component: () => <SavedGradients />,\r\n  },\r\n  {\r\n    path: \"*\",\r\n    component: () => <Home />,\r\n  },\r\n];\r\n","import React, { useContext } from \"react\";\r\nimport { Redirect, Route } from \"react-router-dom\";\r\nimport { AppContext } from \"../../store/AppContext\";\r\n\r\nconst AuthRoute = (props) => {\r\n  const [isLoggedin] = useContext(AppContext);\r\n\r\n  if (isLoggedin) return <Route {...props} />;\r\n\r\n  return <Redirect to=\"/login\" />;\r\n};\r\n\r\nexport default AuthRoute;\r\n","import React, { useContext } from \"react\";\r\nimport { Redirect, Route } from \"react-router-dom\";\r\nimport { AppContext } from \"../../store/AppContext\";\r\n\r\nconst GuestRoute = (props) => {\r\n  const [isLoggedin] = useContext(AppContext);\r\n\r\n  if (!isLoggedin) return <Route {...props} />;\r\n\r\n  return <Redirect to=\"/\" />;\r\n};\r\n\r\nexport default GuestRoute;\r\n","import React, { useState, useContext } from \"react\";\r\nimport { Link, NavLink, useHistory } from \"react-router-dom\";\r\nimport { firebase } from \"../config/firebase\";\r\nimport { AppContext } from \"../store/AppContext\";\r\nimport { List, ButtonPrimary } from \"./theme\";\r\nimport head from \"../assets/images/head-img.svg\";\r\n\r\nconst Header = () => {\r\n  const [isLoggedIn, user] = useContext(AppContext);\r\n\r\n  const history = useHistory();\r\n\r\n  const logout = () => {\r\n    firebase\r\n      .auth()\r\n      .signOut()\r\n      .then((res) => {\r\n        history.replace(\"/login\");\r\n      })\r\n      .catch((e) => console.log(e.response.data));\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <List>\r\n        <ul>\r\n          <li>\r\n            <NavLink to=\"/\">\r\n              <img className=\"w-20\" src={head}></img>\r\n            </NavLink>\r\n          </li>\r\n          {isLoggedIn && (\r\n            <>\r\n              <li>\r\n                <NavLink to=\"/explore\">Explore</NavLink>\r\n              </li>\r\n              <li>\r\n                <NavLink to=\"/saved\">Saved</NavLink>\r\n              </li>\r\n            </>\r\n          )}\r\n        </ul>\r\n        <ul>\r\n          <li>\r\n            {isLoggedIn ? (\r\n              <ButtonPrimary onClick={logout}>Logout</ButtonPrimary>\r\n            ) : (\r\n              <Link to=\"/login\">\r\n                <ButtonPrimary>Login</ButtonPrimary>\r\n              </Link>\r\n            )}\r\n          </li>\r\n          {!isLoggedIn && (\r\n            <li>\r\n              <NavLink to=\"/signup\">\r\n                <ButtonPrimary>Sign Up</ButtonPrimary>\r\n              </NavLink>\r\n            </li>\r\n          )}\r\n        </ul>\r\n      </List>\r\n      <hr></hr>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport \"./assets/tailwind.css\";\r\nimport {\r\n  BrowserRouter as Router,\r\n  Route,\r\n  Switch,\r\n  Link,\r\n  Redirect,\r\n} from \"react-router-dom\";\r\nimport routes from \"./utils/routes\";\r\nimport { firebase, projectFireStore } from \"./config/firebase\";\r\nimport { AppContext } from \"./store/AppContext\";\r\nimport AuthRoute from \"./utils/routes/AuthRoute\";\r\nimport GuestRoute from \"./utils/routes/GuestRoute\";\r\nimport Header from \"./components/Navbar\";\r\nimport Loader from \"./components/Loader\";\r\n\r\nfunction App() {\r\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\r\n  const [user, setUser] = useState({});\r\n  const [isLoading, setIsLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    firebase.auth().onAuthStateChanged((user) => {\r\n      if (user) {\r\n        setIsLoggedIn(true);\r\n        setUser(user);\r\n        setIsLoading(false);\r\n      } else {\r\n        setUser({});\r\n        setIsLoggedIn(false);\r\n        setIsLoading(false);\r\n      }\r\n      console.log(\"Logged in\", user.displayName);\r\n    });\r\n  }, []);\r\n\r\n  if (isLoading) return <Loader />;\r\n\r\n  return (\r\n    <Router>\r\n      <AppContext.Provider value={[isLoggedIn, user]}>\r\n        <Header />\r\n        <Switch>\r\n          {routes.map((route, index) => {\r\n            if (route.path === \"/login\") {\r\n              return (\r\n                <GuestRoute\r\n                  key={index}\r\n                  exact={route.exact}\r\n                  path={route.path}\r\n                  component={route.component}\r\n                />\r\n              );\r\n            }\r\n            if (route.path === \"/explore\") {\r\n              return (\r\n                <AuthRoute\r\n                  key={index}\r\n                  exact={route.exact}\r\n                  path={route.path}\r\n                  component={route.component}\r\n                />\r\n              );\r\n            }\r\n            if (route.path === \"/saved\") {\r\n              return (\r\n                <AuthRoute\r\n                  key={index}\r\n                  exact={route.exact}\r\n                  path={route.path}\r\n                  component={route.component}\r\n                />\r\n              );\r\n            }\r\n\r\n            return (\r\n              <Route\r\n                key={index}\r\n                exact={route.exact}\r\n                path={route.path}\r\n                component={route.component}\r\n              />\r\n            );\r\n          })}\r\n          <Route path=\"*\">\r\n            <h1>Not found</h1>\r\n          </Route>\r\n        </Switch>\r\n      </AppContext.Provider>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport \"./assets/styles.css\"\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","module.exports = __webpack_public_path__ + \"static/media/head-img.a46d4d8c.svg\";"],"sourceRoot":""}